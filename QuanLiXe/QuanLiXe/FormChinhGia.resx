<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxClose.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        w0w1i8V/leaM1AVe7YIAAAAASUVORK5CYII=
</value>
  </data>
</root>